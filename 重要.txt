<React>
npm start
npm install



git checkout -b jin-v1 　　　　  　　　　　　　　　　                           #新しいブランチを作成して移動
git init    　　　　　　　　　　　　　　　　        　                            # Gitの初期化
git add .    　　　　　　　　　　　　　　　       　                            　# 現在のすべてのファイルを追加
git commit -m "123"  　　　　　　　　　　　                         　          　# コミットを作成
git push -u origin main --force 　　　　　　                                    # ブランチを強制プッシュ (main)
git push -u origin jin-v1 --force　　　                                         # ブランチを強制プッシュ (jin-v1)
git pull origin jin-v1



rmdir /s /q .git  　　　　　　　　　　　　                                       # git history 削除
git branch -a
git remote add origin https://github.com/Tama-Jin/RealEstateWeb.git  　　　 　  # リモートリポジトリを追加、連結 (git remote -v確認可能)
git push origin main

npm install react-router-dom
npm install cross-env --save-dev
npm install axios
git clone https://github.com/Tama-Jin/RealEstateWeb

git checkout main  # 메인 브랜치로 이동
git checkout jin-v1  # 다시 jin-v1 브랜치로 이동



-----------------------------------------------------------------------------------------------
<Ruby>


rails server -p 4000
psql -U host -d RealEstateWeb


SELECT COUNT(*) FROM properties;
SELECT * FROM properties;


rails db:migrate
rails generate migration add_id_to_properties










choco install ruby
ruby -v
gem install rails
gem bundle
choco install postgresql
rails server


taskkill /PID 5756 /F
del tmp/pids/server.pid
rails console



Heroku는 특히 프론트엔드와 백엔드를 함께 배포할 수 있는 간편한 플랫폼입니다. 그 이유를 몇 가지 주요 포인트로 설명드리겠습니다.

1. Heroku 추천 이유
프론트엔드와 백엔드를 한 번에 배포할 수 있는 통합된 플랫폼으로, Ruby on Rails 백엔드와 React 프론트엔드 앱을 모두 배포하기 적합합니다.
Heroku Postgres와 같은 데이터베이스 지원이 강력하고, 배포 관리도 GitHub 연동을 통해 쉽게 자동화할 수 있습니다.
자동화된 배포: GitHub와 연결된 후 자동 배포가 가능하므로, 코드를 푸시하면 자동으로 빌드와 배포가 이루어집니다.
무료 계층: 간단한 프로젝트나 개발 중인 애플리케이션의 경우 무료 계층으로 충분히 시작할 수 있습니다.
확장성: 프로젝트가 커질 경우, 손쉽게 다양한 기능을 추가하고 서버 확장도 가능합니다.
2. 배포 시간
초기 설정: 프로젝트를 Heroku에 처음 배포하는 데는 약간의 시간이 걸릴 수 있습니다. 특히 PostgreSQL 설정이나 환경 변수를 추가하는 데 시간이 조금 더 들 수 있습니다.
배포 시간: 이미 GitHub에 푸시된 상태에서 Heroku에 배포하는 시간은 대개 10-15분 이내입니다. 특히 자동 배포가 설정되어 있다면, 푸시 후 바로 배포가 이루어지고, Heroku에서 앱을 빌드하는 데 몇 분이 걸립니다.
3. 비용
무료 계층: Heroku는 무료 계층을 제공합니다. 이 계층에서는 한정된 리소스(예: Dyno - 서버 인스턴스)가 제공됩니다.
프론트엔드와 백엔드 모두 무료 계층으로 가능: 작은 프로젝트나 개발용으로는 충분히 무료 계층에서 운영할 수 있습니다.
단점: 무료 계층에서는 자동 절전 모드가 있어, 앱이 일정 시간 동안 사용되지 않으면 슬로우다운이 발생할 수 있습니다. 이럴 경우 유료 계층으로 업그레이드해야 합니다.
유료 계층: 앱이 커지고 더 많은 트래픽을 처리해야 할 경우, 유료 계층으로 업그레이드해야 합니다. 가격은 디노(Heroku에서 사용하는 서버 인스턴스)의 수에 따라 다르며, $7/month부터 시작합니다.
PostgreSQL: Heroku에서 제공하는 데이터베이스도 무료 계층이 있지만, 트래픽이나 저장 용량이 커지면 유료 계층으로 업그레이드해야 합니다.
4. 난이도
Heroku 사용 난이도는 상당히 낮습니다. 특히 GitHub와 연동하여 자동 배포를 설정하면, 별도의 복잡한 설정 없이도 배포가 가능하므로, 초보자에게 적합합니다.
간편한 CLI와 웹 대시보드가 제공되어 배포와 서버 관리를 매우 쉽게 할 수 있습니다.
단점: 서버나 데이터베이스 설정이 완벽히 자동화되지는 않아서, 일부 설정(예: 환경 변수 설정, 데이터베이스 설정 등)은 처음에 조금은 공부가 필요할 수 있습니다.
Heroku 사용 과정 (간단한 배포 흐름)
Heroku 가입 후, Heroku CLI 설치.
GitHub에 있는 프로젝트를 Heroku에 연동.
PostgreSQL 등 필요한 데이터베이스 추가 (필요시).
배포 명령어 (git push heroku main)를 통해 자동으로 앱 배포.
배포가 완료되면, Heroku URL로 앱이 작동하는지 확인.
결론
Heroku는 프론트엔드와 백엔드를 모두 쉽게 배포할 수 있는 플랫폼이며, 특히 Ruby on Rails와 React 앱을 동시에 다룰 수 있는 최적의 선택입니다.
배포 시간은 약 10-15분 정도 걸리며, 무료 계층으로 시작할 수 있어서 비용 부담이 적습니다. 그러나 트래픽이 많아지거나 앱이 커지면 유료 계층을 고려해야 할 수 있습니다.
난이도는 상당히 낮고 직관적이어서 초보자도 쉽게 접근할 수 있습니다. 자동화된 배포 시스템 덕분에 코드를 푸시하는 것만으로 앱을 배포할 수 있습니다.
따라서, Heroku는 작은 프로젝트부터 시작할 수 있는 간편하고 유연한 플랫폼으로, 프론트엔드와 백엔드가 함께 필요한 프로젝트에 적합한 선택이 될 것입니다.
